name: Breakout SVG & GitHub Stats

on:
  schedule:
    - cron: "0 */24 * * *"  # –∑–∞–ø—É—Å–∫ –¥–ª—è generate-svg"
    - cron: "47 2 * * *"     # –∑–∞–ø—É—Å–∫ –¥–ª—è update-stats
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate-svg:
    name: Generate Breakout SVGs
    if: github.event.schedule == '0 */24 * * *' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate SVG
        uses: cyprieng/github-breakout@v1.0.0
        with:
          github_username: ${{ github.repository_owner }}

      - name: Move generated SVGs
        run: |
          mkdir -p images
          mv output/light.svg images/breakout-light.svg
          mv output/dark.svg images/breakout-dark.svg

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and push SVGs
        run: |
          git add images/breakout-light.svg images/breakout-dark.svg
          git commit -m "chore: update breakout SVGs" || echo "No changes to commit"
          git push

  update-stats:
    name: Update Github Stats
    if: github.event.schedule == '47 2 * * *' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install requirements
        run: npm install

      - name: Github Configurations
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "action@github.com"
          git pull

      - name: Update Template
        run: |
          node updater.js ${{ github.repository_owner }} atom
        env:
          GHT: ${{ secrets.GHT }}

      - name: Commit and Push changes
        run: |
          git add .
          git commit -m "Github Stats updated üéâ" || echo
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push

      - name: Remove node_modules from repo and push
        run: |
          git rm -r --cached node_modules || echo "node_modules not tracked"
          git commit -m "chore: remove node_modules from repo" || echo "No node_modules to remove"
          git push
